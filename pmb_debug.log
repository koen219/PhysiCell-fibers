DEBUG:root:pmb.py: Studio mode: Run,Plot,Legend tabs
DEBUG:root:exec pgm is project
DEBUG:root:self.current_dir = /home/erika/Desktop/PhysiCell/PhysiCell-fibers
DEBUG:root:self.pmb_root_dir = /home/erika/Desktop/PhysiCell/cecam23/code/PhysiCell-model-builder
DEBUG:root:self.config_dir = /home/erika/Desktop/PhysiCell/PhysiCell-fibers/config
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b36310>
DEBUG:root:   -------- substrate:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b36360>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b363b0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b36400>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b36450>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0b364a0>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x7fc4d0b36590>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x7fc4d0b36630>
DEBUG:root:------- options: <Element 'initial_condition' at 0x7fc4d0b36680>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x7fc4d0b36770>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:
====================== create_cycle_tab ===================
DEBUG:root: new stacked widget: trate live -------------> 0
DEBUG:root: new stacked widget: trate Ki67 -------------> 1
DEBUG:root: new stacked widget: t02 -------------> 2
DEBUG:root: new stacked widget: trate_flowcyto -------------> 3
DEBUG:root: new stacked widget: flow cyto sep -------------> 4
DEBUG:root: new stacked widget: trate_quiescent -------------> 5
DEBUG:root: new stacked widget: duration live -------------> 6
DEBUG:root: new stacked widget: duration Ki67 -------------> 7
DEBUG:root: new stacked widget: t02 -------------> 8
DEBUG:root: new stacked widget: duration_flowcyto -------------> 9
DEBUG:root: new stacked widget: flow cyto sep -------------> 10
DEBUG:root: new stacked widget: duration_quiescent -------------> 11
DEBUG:root:intracellular is Unkown
DEBUG:root:pmb.py: first_cell_def_name= default
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> substrate
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking default
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= default
DEBUG:root:
--------new_intracellular_params(): cdname_new= default
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7fc4d0b369f0>
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0b36a40>
DEBUG:root:------------ sval for phase duration= 300.0
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0b36a90>
DEBUG:root:------------ sval for phase duration= 480
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0b36ae0>
DEBUG:root:------------ sval for phase duration= 240
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0b36b30>
DEBUG:root:------------ sval for phase duration= 60
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7fc4d0b36b80>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7fc4d0b36c70>
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0b36d10>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7fc4d0b3c450>
DEBUG:root:<Element 'duration' at 0x7fc4d0b3c4f0>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x7fc4d0b3c540>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'default': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= default,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = substrate
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7fc4d0b42d60>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7fc4d0b42e50>
DEBUG:root: chemotactic_sensitivity--> substrate = 0.0
DEBUG:root:{'substrate': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:    motility_advanced_chemotaxis_substrate= substrate
DEBUG:root:   chemotactic_sensitivity = {'substrate': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = substrate
DEBUG:root:     chemotactic_sensitivity (dict)= {'substrate': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7fc4d0b42f40>
DEBUG:root:0) -- secretion substrate = substrate
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7fc4d0b47400>
DEBUG:root: live_phagocytosis_rate= {'default': '0.0'}
DEBUG:root: attack_rate= {'default': '0.0'}
DEBUG:root: fusion_rate= {'default': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'default': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7fc4d0b47ae0>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= default --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
----- update_motility_params():  cdname= default
DEBUG:root:     setting motility_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = default
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:uep_user_params= <Element 'user_parameters' at 0x7fc4d0b47d10>
DEBUG:root:pmb.py: self.current_dir = /home/erika/Desktop/PhysiCell/PhysiCell-fibers
DEBUG:root:pmb.py: creating ICs, Run, and Plot tabs
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Italic.otf', name='MathJax_Math', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Regular.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinChrome-Regular.otf', name='MathJax_WinChrome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Italic.otf', name='MathJax_SansSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Italic.otf', name='MathJax_Main', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Bold.otf', name='MathJax_Vector-Bold', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Bold.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_AMS-Regular.otf', name='MathJax_AMS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Bold.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Typewriter-Regular.otf', name='MathJax_Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size1-Regular.otf', name='MathJax_Size1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Regular.otf', name='MathJax_Vector', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinIE6-Regular.otf', name='MathJax_WinIE6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Regular.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Regular.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size3-Regular.otf', name='MathJax_Size3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Script-Regular.otf', name='MathJax_Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Regular.otf', name='MathJax_Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size4-Regular.otf', name='MathJax_Size4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-BoldItalic.otf', name='MathJax_Math', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Bold.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size2-Regular.otf', name='MathJax_Size2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Bold.otf', name='MathJax_Main', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Regular.otf', name='MathJax_Main', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Italic.otf', name='MathJax_Math', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Regular.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinChrome-Regular.otf', name='MathJax_WinChrome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Italic.otf', name='MathJax_SansSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Italic.otf', name='MathJax_Main', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Bold.otf', name='MathJax_Vector-Bold', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Bold.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_AMS-Regular.otf', name='MathJax_AMS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Bold.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Typewriter-Regular.otf', name='MathJax_Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size1-Regular.otf', name='MathJax_Size1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Regular.otf', name='MathJax_Vector', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinIE6-Regular.otf', name='MathJax_WinIE6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Regular.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Regular.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size3-Regular.otf', name='MathJax_Size3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Script-Regular.otf', name='MathJax_Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Regular.otf', name='MathJax_Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size4-Regular.otf', name='MathJax_Size4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-BoldItalic.otf', name='MathJax_Math', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Bold.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size2-Regular.otf', name='MathJax_Size2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Bold.otf', name='MathJax_Main', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Regular.otf', name='MathJax_Main', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:pmb.py: calling vis_tab.substrates_cbox_changed_cb(2)
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Italic.otf', name='MathJax_Math', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Regular.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinChrome-Regular.otf', name='MathJax_WinChrome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Italic.otf', name='MathJax_SansSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Italic.otf', name='MathJax_Main', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Bold.otf', name='MathJax_Vector-Bold', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Bold.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_AMS-Regular.otf', name='MathJax_AMS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Bold.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Typewriter-Regular.otf', name='MathJax_Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size1-Regular.otf', name='MathJax_Size1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Regular.otf', name='MathJax_Vector', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinIE6-Regular.otf', name='MathJax_WinIE6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Regular.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Regular.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size3-Regular.otf', name='MathJax_Size3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Script-Regular.otf', name='MathJax_Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Regular.otf', name='MathJax_Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size4-Regular.otf', name='MathJax_Size4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-BoldItalic.otf', name='MathJax_Math', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Bold.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size2-Regular.otf', name='MathJax_Size2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Bold.otf', name='MathJax_Main', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Regular.otf', name='MathJax_Main', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/home/erika/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:
pmb.py: open_as_cb():  full_path_model_name =/home/erika/Desktop/PhysiCell/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 76
DEBUG:root:pmb: show_sample_model(): self.config_file = /home/erika/Desktop/PhysiCell/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0332680>
DEBUG:root:   -------- quorum factor:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d0332630>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d05df8b0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d05df220>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d05df720>
DEBUG:root:bv = <Element 'boundary_value' at 0x7fc4d05df9f0>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x7fc4d05dfcc0>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x7fc4d05dfb30>
DEBUG:root:------- options: <Element 'initial_condition' at 0x7fc4d05dfea0>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x7fc4d05df1d0>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> quorum factor
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking ECM
DEBUG:root:Checking pusher
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= ECM
DEBUG:root:
--------new_intracellular_params(): cdname_new= ECM
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7fc4d03154a0>
DEBUG:root:--  cycle_live_trate00 0.000
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7fc4d03154f0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7fc4d03155e0>
DEBUG:root:phase_duration= <Element 'duration' at 0x7fc4d0315680>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7fc4d0315d60>
DEBUG:root:<Element 'duration' at 0x7fc4d0315e00>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x7fc4d0315e50>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'ECM': '1'}
DEBUG:root:--> {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= ECM,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = quorum factor
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7fc4d033f810>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7fc4d033f770>
DEBUG:root: chemotactic_sensitivity--> quorum factor = 1
DEBUG:root:{'quorum factor': '1'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:    motility_advanced_chemotaxis_substrate= quorum factor
DEBUG:root:   chemotactic_sensitivity = {'quorum factor': '1'}
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '1'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7fc4d033f6d0>
DEBUG:root:0) -- secretion substrate = quorum factor
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7fc4d033f220>
DEBUG:root: live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7fc4d033e630>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= ECM --> custom_data: {'preferred_angle': ['3.14', False]}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= ECM --> custom_data: {'preferred_angle': ['3.14', False], 'angular_spring_constant': ['100', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= pusher
DEBUG:root:
--------new_intracellular_params(): cdname_new= pusher
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[2]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7fc4d033e310>
DEBUG:root:--  cycle_live_trate00 0.00
DEBUG:root: >> phase_durations_path =.//cell_definition[2]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7fc4d033e360>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7fc4d033e220>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7fc4d033e130>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7fc4d02c73b0>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7fc4d02c7450>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7fc4d02c74f0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[2]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[2]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'ECM': '0.0'}
DEBUG:root:--> {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[2]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= pusher,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = quorum factor
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7fc4d02d58b0>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7fc4d02d5950>
DEBUG:root: chemotactic_sensitivity--> quorum factor = 0.0
DEBUG:root:{'quorum factor': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:    motility_advanced_chemotaxis_substrate= quorum factor
DEBUG:root:   chemotactic_sensitivity = {'quorum factor': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[2]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7fc4d02d5a40>
DEBUG:root:0) -- secretion substrate = quorum factor
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7fc4d02d5d60>
DEBUG:root: live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[2]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'ECM': '0.0', 'pusher': '0.0', 'default': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7fc4d0302860>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= pusher --> custom_data: {'preferred_angle': ['0', False]}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= pusher --> custom_data: {'preferred_angle': ['0', False], 'angular_spring_constant': ['1', False]}
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '1'}
DEBUG:root:new val = 1
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '1'}
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['ECM', 'pusher']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:uep_user_params= <Element 'user_parameters' at 0x7fc4d0302ae0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-200.0, 200.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-200.0, 200.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-20.0, 20.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-20.0, 20.0)
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attchementrate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attachment_rate
DEBUG:root:attchementaff
DEBUG:root:detachrate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:attchementaff
DEBUG:root:detach_rate
DEBUG:root:detachaff
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 8
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:detach_sensitivity
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:detach_sensitivity
DEBUG:root:found 7
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:detach_sensitivity
DEBUG:root:found 7
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7fc4d0636c10> <matplotlib.colors.Normalize object at 0x7fc4d0636c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7fc4d02c82e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7fc4d0636c10> <matplotlib.colors.Normalize object at 0x7fc4d0636c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7fc4d02c82e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7fc50852ff10>
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '1'}
DEBUG:root:new val = 1
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '0.0'}
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '1'}
DEBUG:root:new val = 1
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '1'}
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-100.0, 100.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x7fc4d0b30310>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:attach_rate
DEBUG:root:detach_rate
DEBUG:root:linear_spring_constant
DEBUG:root:max_attach
DEBUG:root:found 6
